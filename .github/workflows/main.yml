
name: cicd

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:


permissions:
  actions: write
  contents: write
  pull-requests: write

jobs:
  release_please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      version: ${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
    
      - name: Map custom commit types for release-please
        run: |
          git log --pretty=format:"%H %s" origin/main..HEAD | while read hash msg; do
            new_msg="$msg"
            case "$msg" in
              "[add]"*) new_msg="${msg/[add]/feat}" ;;       # feat = minor
              "[chance]"* | "[update]"*) new_msg="${msg/[chance]/chore}" ;;
              "[fix]"*) new_msg="${msg/[fix]/fix}" ;;
              "[delete]"*) new_msg="${msg/[delete]/feat}" ;;  # feat + BREAKING CHANGE poi aggiungi manualmente
            esac
            if [ "$new_msg" != "$msg" ]; then
              git commit --amend -m "$new_msg" --no-edit || true
            fi
          done

      - name: Release Generation
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .github/workflows/release-please-config.json
          manifest-file: .release-please-manifest.json

  deploy:
    runs-on: ubuntu-latest
    if: needs.release_please.outputs.release_created == 'true'
    needs: release_please
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm CLI
        run: npm install -g pnpm
        
      - name: Running pnpm install
        run: pnpm install --no-frozen-lockfile
        
     